---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app vector-agent
spec:
  interval: 15m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  dependsOn:
    - name: vector-aggregator
      namespace: observability
  values:
    controllers:
      vector-agent:
        type: daemonset
        strategy: RollingUpdate
        serviceAccount:
          identifier: *app
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/timberio/vector
              tag: 0.48.0-alpine@sha256:2dda29c892cef4e80e1b9d00d7981d29658aa9c16034a0edb4e6f41a78280e70
            env:
              PROCFS_ROOT: /host/proc
              SYSFS_ROOT: /host/sys
              VECTOR_SELF_NODE_NAME:
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: spec.nodeName
              VECTOR_SELF_POD_NAME:
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.name
              VECTOR_SELF_POD_NAMESPACE:
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
            args: ["--config", "/etc/vector/vector.yaml"]
            securityContext:
              privileged: true
    serviceAccount:
      vector-agent: {}
    persistence:
      config:
        enabled: true
        type: configMap
        name: vector-agent-configmap
        globalMounts:
          - path: /etc/vector/vector.yaml
            subPath: vector.yaml
            readOnly: true
      data:
        type: emptyDir
        globalMounts:
          - path: /vector-data-dir
      procfs:
        type: hostPath
        hostPath: /proc
        hostPathType: Directory
        globalMounts:
          - path: /host/proc
            readOnly: true
      sysfs:
        type: hostPath
        hostPath: /sys
        hostPathType: Directory
        globalMounts:
          - path: /host/sys
            readOnly: true
      var-lib:
        type: hostPath
        hostPath: /var/lib
        hostPathType: Directory
        globalMounts:
          - readOnly: true
      var-log:
        type: hostPath
        hostPath: /var/log
        hostPathType: Directory
        globalMounts:
          - readOnly: true
    rbac:
      bindings:
        vector-agent:
          roleRef:
            kind: ClusterRole
            name: vector-agent
          subjects:
            - identifier: *app
          type: ClusterRoleBinding
      roles:
        vector-agent:
          rules:
            - apiGroups: [""]
              resources: ["namespaces", "nodes", "pods"]
              verbs: ["list", "watch"]
          type: ClusterRole
