---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: rook-ceph-cluster
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: v1.18.3
  url: oci://ghcr.io/rook/rook-ceph-cluster
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 30m
  timeout: 15m
  chartRef:
    kind: OCIRepository
    name: rook-ceph-cluster
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
      # Disable false positive alerts for /var disk space warnings on Talos nodes
      # These alerts trigger incorrectly due to heavy container image/log usage in /var
      # but don't reflect actual storage capacity issues since Ceph uses dedicated devices
      prometheusRuleOverrides:
        CephNodeDiskspaceWarning:
          disabled: true
    ingress:
      dashboard:
        ingressClassName: internal
        host:
          name: &host rook.${SECRET_DOMAIN}
          path: /
        tls:
          - hosts:
              - *host
    toolbox:
      enabled: true

    cephClusterSpec:
      # https://rook.io/docs/rook/v1.10/Storage-Configuration/Advanced/ceph-configuration/#custom-cephconf-settings
      cephConfig:
        global:
          bdev_enable_discard: "true" # quote
          bdev_async_discard_threads: "1" # quote
          osd_class_update_on_start: "false" # quote
          device_failure_prediction_mode: local # requires mgr module
          bluestore_slow_ops_warn_lifetime: "300"
          bluestore_slow_ops_warn_threshold: "5"
      cleanupPolicy:
        wipeDevicesFromOtherClusters: true
      mgr:
        modules:
          - name: diskprediction_local
            enabled: true
          - name: insights
            enabled: true
          - name: pg_autoscaler
            enabled: true
          - name: rook
            enabled: true
      network:
        provider: host
        connections:
          requireMsgr2: true
      resources:
        mgr:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            memory: 2Gi
        mon:
          requests:
            cpu: 50m
            memory: 512Mi
          limits:
            memory: 4Gi
        osd:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            memory: 6Gi
        mgr-sidecar:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 256Mi
      crashCollector:
        disable: false
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://prometheus-operated.observability.svc.cluster.local:9090
      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: k8s-node-1
            devices:
              - name: /dev/disk/by-id/nvme-Samsung_SSD_980_PRO_with_Heatsink_1TB_S6WSNJ0W114997P
          - name: k8s-node-2
            devices:
              - name: /dev/disk/by-id/nvme-CT1000P2SSD8_2130E5BC6D4C
          - name: k8s-node-3
            devices:
              - name: /dev/disk/by-id/nvme-Samsung_SSD_980_PRO_1TB_S5GXNX0RA28393L
          - name: k8s-node-4
            devices:
              - name: /dev/disk/by-id/nvme-Samsung_SSD_980_1TB_S649NU0W602440H
          - name: k8s-node-5
            devices:
              - name: /dev/disk/by-id/nvme-Samsung_SSD_990_PRO_2TB_S7HENU1Y513806M
      placement:
        mgr: &placement
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: node-role.kubernetes.io/control-plane
                      operator: Exists
        mon: *placement
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete
    cephFileSystems:
      - name: &cephFileSystemName ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
              limits:
                memory: 4Gi
            placement:
              topologySpreadConstraints:
                - maxSkew: 1
                  topologyKey: kubernetes.io/hostname
                  whenUnsatisfiable: DoNotSchedule
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: ceph-mds
                      app.kubernetes.io/part-of: *cephFileSystemName
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/fstype: ext4
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
    cephObjectStores:
      - name: ceph-objectstore
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          dataPool:
            failureDomain: host
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
          preservePoolsOnDelete: true
          gateway:
            port: 80
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
              limits:
                memory: 2Gi
            instances: 2
            priorityClassName: system-cluster-critical
          healthCheck:
            bucket:
              interval: 60s
        storageClass:
          enabled: true
          name: ceph-bucket
          reclaimPolicy: Delete
          volumeBindingMode: Immediate
          parameters:
            region: us-east-1
        ingress:
          enabled: true
          ingressClassName: internal
          host:
            name: &host rgw.${SECRET_DOMAIN}
            path: /
          tls:
            - hosts:
                - *host
