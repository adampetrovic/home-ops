# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: frigate
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  uninstall:
    keepHistory: false
  values:
    controllers:
      frigate:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: 0.16.0-beta4@sha256:0f39e8111ea7ad986d70b43bf572fe64a923c1e80fbdb3580f489c8db6edefd8
            env:
              TZ: "Australia/Sydney"
            envFrom:
              - secretRef:
                  name: frigate-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: &port 5000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              privileged: true
            resources:
              requests:
                cpu: 1581m
                memory: 8Gi
              limits:
                gpu.intel.com/i915: "1"
                memory: 16Gi
        pod:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values: ["plex"]
                  topologyKey: kubernetes.io/hostname
          nodeSelector:
            google.feature.node.kubernetes.io/coral: "true"
    service:
      app:
        controller: frigate
        ports:
          http:
            port: *port
          rtsp:
            port: 8554
          go2rtc:
            port: 1984
    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: &host "frigate.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
              - path: /go2rtc
                service:
                  identifier: app
                  port: go2rtc
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: frigate
        globalMounts:
          - path: /config
      config-file:
        type: configMap
        name: frigate-configmap
        globalMounts:
          - path: /config/config.yml
            subPath: config.yml
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        globalMounts:
          - path: /dev/shm
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
        hostPathType: Directory
        globalMounts:
          - path: /dev/bus/usb
      media:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/k8s/frigate
        globalMounts:
          - path: /media

