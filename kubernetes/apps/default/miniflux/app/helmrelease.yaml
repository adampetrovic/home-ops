# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app miniflux
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
    controllers:
      miniflux:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: 'true'
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: '16.3'
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: miniflux-secret
        containers:
          app:
            image:
              repository: ghcr.io/miniflux/miniflux
              tag: 2.1.4
            envFrom:
              - secretRef:
                  name: miniflux-secret
            env:
              BASE_URL: https://miniflux.${SECRET_DOMAIN}
              CREATE_ADMIN: '1'
              DEBUG: 1
              LOG_DATE_TIME: '1'
              METRICS_ALLOWED_NETWORKS: 10.42.0.0/16
              METRICS_COLLECTOR: '1'
              OAUTH2_CLIENT_ID: miniflux
              OAUTH2_USER_CREATION: '1'
              OAUTH2_OIDC_DISCOVERY_ENDPOINT: https://auth.${SECRET_DOMAIN}
              OAUTH2_PROVIDER: oidc
              OAUTH2_REDIRECT_URL: https://miniflux.${SECRET_DOMAIN}/oauth2/oidc/callback
              POLLING_SCHEDULER: round_robin
              POLLING_FREQUENCY: 60
              RUN_MIGRATIONS: 1
            resources:
              requests:
                cpu: 223m
                memory: 100Mi
              limits:
                memory: 250Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
    service:
      app:
        controller: miniflux
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/proxy-connect-timeout: '300'
        hosts:
          - host: &host miniflux.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
      secondary:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_PUBLIC_DOMAIN}"
        hosts:
          - host: &publicHost miniflux.${SECRET_PUBLIC_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *publicHost
