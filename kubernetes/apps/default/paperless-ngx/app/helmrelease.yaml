# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app paperless-ngx
spec:
  interval: 15m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
      strategy: rollback
  values:
    controllers:
      paperless-ngx:
        annotations:
          reloader.stakater.com/auto: 'true'
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5.0@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: paperless-secret
        containers:
          gotenburg:
            image:
              repository: thecodingmachine/gotenberg
              tag: 8.21.1
              pullPolicy: IfNotPresent
            env:
              - {name: DISABLE_GOOGLE_CHROME, value: '1'}
          redis:
            image:
              repository: public.ecr.aws/docker/library/redis
              tag: 8.2.1
              pullPolicy: IfNotPresent
          tika:
            image:
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.1-full
              pullPolicy: IfNotPresent
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.18.1
            envFrom: *envFrom
            env:
              USERMAP_UID: 568
              USERMAP_GID: 100
              PAPERLESS_TIME_ZONE: "Australia/Sydney"
              PAPERLESS_PORT: &port 80
              PAPERLESS_REDIS: redis://localhost:6379
              PAPERLESS_TASK_WORKERS: 2
              PAPERLESS_TIKA_ENABLED: 1
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
              PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
              PAPERLESS_URL: https://paperless.${SECRET_DOMAIN}
              PAPERLESS_ALLOWED_HOSTS: paperless.${SECRET_DOMAIN}
              PAPERLESS_ENABLE_HTTP_REMOTE_USER: 'true'
              PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_REMOTE_USER
              PAPERLESS_CONSUMPTION_DIR: /library/consume
              PAPERLESS_DATA_DIR: /library/data
              PAPERLESS_MEDIA_ROOT: /library/media
              PAPERLESS_EXPORT_DIR: /library/export
              PAPERLESS_CONSUMER_POLLING: 60
              PAPERLESS_CONSUMER_IGNORE_PATTERNS: '[".DS_STORE/*", "._*", ".stfolder/*", "@eaDir/*"]'
              PAPERLESS_TRUSTED_PROXIES: 10.42.0.0/16
              PAPERLESS_CONSUMER_DELETE_DUPLICATES: true
              PAPERLESS_CONSUMER_RECURSIVE: true
              PAPERLESS_OCR_LANGUAGE: eng
            resources:
              requests:
                cpu: 35m
                memory: 926Mi
              limits:
                memory: 2Gi
    service:
      app:
        controller: paperless-ngx
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        hosts:
          - host: &host paperless.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: paperless-ngx
        globalMounts:
          - path: /data
      downloads:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/k8s/paperless
        globalMounts:
          - path: /library
