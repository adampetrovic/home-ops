# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authelia
  namespace: security
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: lldap
      namespace: security
    - name: redis
      namespace: database
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      main:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: 'true'
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: '16.2'
            imagePullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: authelia-secret
        containers:
          main:
            image:
              repository: ghcr.io/authelia/authelia
              tag: 4.38.7@sha256:1bfa7206c144f8cd184743a7ed629f4a02d2dceb50e7260588373fe6de4cd959
            envFrom: *envFrom
            env:
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_GROUPS_DN: ou=groups
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_USERS_DN: ou=people
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_BASE_DN: dc=home,dc=arpa
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_DISPLAY_NAME: displayName
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_GROUPS_FILTER: (member={dn})
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_GROUP_NAME: cn
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_IMPLEMENTATION: custom
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_MAIL: mail
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_START_TLS: 'false'
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_TIMEOUT: 5s
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDRESS: ldap://lldap.security.svc.cluster.local:389
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USER: uid=admin,ou=people,dc=home,dc=arpa
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_USERNAME: uid
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERS_FILTER: (&({username_attribute}={input})(objectClass=person))
              AUTHELIA_AUTHENTICATION_BACKEND_PASSWORD_RESET_DISABLE: 'true'
              AUTHELIA_AUTHENTICATION_BACKEND_REFRESH_INTERVAL: 1m
              AUTHELIA_DEFAULT_REDIRECTION_URL: https://auth.${SECRET_DOMAIN}
              AUTHELIA_DUO_API_DISABLE: 'true'
              AUTHELIA_LOG_LEVEL: debug
              AUTHELIA_NOTIFIER_DISABLE_STARTUP_CHECK: 'true'
              AUTHELIA_NOTIFIER_SMTP_DISABLE_REQUIRE_TLS: 'true'
              AUTHELIA_NOTIFIER_SMTP_ADDRESS: smtp.${SECRET_DOMAIN}:25
              AUTHELIA_NOTIFIER_SMTP_SENDER: Authelia <authelia@${SECRET_DOMAIN}>
              AUTHELIA_SERVER_DISABLE_HEALTHCHECK: 'true'
              AUTHELIA_SERVER_PORT: &port 80
              AUTHELIA_SESSION_DOMAIN: ${SECRET_DOMAIN}
              AUTHELIA_SESSION_NAME: authelia-home-ops
              AUTHELIA_SESSION_REDIS_DATABASE_INDEX: 14
              AUTHELIA_SESSION_REDIS_HOST: redis.database.svc.cluster.local
              AUTHELIA_TELEMETRY_METRICS_ADDRESS: tcp://0.0.0.0:8080
              AUTHELIA_TELEMETRY_METRICS_ENABLED: 'true'
              AUTHELIA_THEME: dark
              AUTHELIA_TOTP_ISSUER: authelia.com
              AUTHELIA_WEBAUTHN_DISABLE: 'true'
            resources:
              requests:
                cpu: 5m
                memory: 10Mi
              limits:
                memory: 200Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            args: [--config, /config/configuration.yml, --config.experimental.filters, expand-env]
    service:
      main:
        ports:
          http:
            port: *port
          metrics:
            enabled: true
            port: 8080
    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            add_header Cache-Control "no-store";
            add_header Pragma "no-cache";
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
        hosts:
          - host: &host auth.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        type: configMap
        name: authelia-configmap
        readOnly: false
        globalMounts:
          - path: /config/configuration.yml
            subPath: configuration.yml
    enableServiceLinks: false
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
