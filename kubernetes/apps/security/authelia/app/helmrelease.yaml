# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authelia
spec:
  interval: 15m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      authelia:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: 'true'
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5.0@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: authelia-secret
        containers:
          app:
            image:
              repository: ghcr.io/authelia/authelia
              tag: 4.39.5@sha256:023e02e5203dfa0ebaee7a48b5bae34f393d1f9cada4a9df7fbf87eb1759c671
            envFrom: *envFrom
            env:
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_GROUPS_DN: ou=groups
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_USERS_DN: ou=people
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_BASE_DN: dc=home,dc=arpa
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_DISPLAY_NAME: displayName
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_GROUPS_FILTER: (member={dn})
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_GROUP_NAME: cn
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_IMPLEMENTATION: custom
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_MAIL: mail
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_START_TLS: 'false'
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_TIMEOUT: 5s
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDRESS: ldap://lldap.security.svc.cluster.local:389
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USER: uid=admin,ou=people,dc=home,dc=arpa
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_USERNAME: uid
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERS_FILTER: (&({username_attribute}={input})(objectClass=person))
              AUTHELIA_AUTHENTICATION_BACKEND_PASSWORD_RESET_DISABLE: 'true'
              AUTHELIA_AUTHENTICATION_BACKEND_REFRESH_INTERVAL: 1m
              AUTHELIA_DUO_API_DISABLE: 'true'
              AUTHELIA_LOG_LEVEL: debug
              AUTHELIA_NOTIFIER_DISABLE_STARTUP_CHECK: 'true'
              AUTHELIA_NOTIFIER_SMTP_DISABLE_REQUIRE_TLS: 'true'
              AUTHELIA_NOTIFIER_SMTP_ADDRESS: smtp.${SECRET_DOMAIN}:25
              AUTHELIA_NOTIFIER_SMTP_SENDER: Authelia <authelia@${SECRET_DOMAIN}>
              AUTHELIA_SERVER_DISABLE_HEALTHCHECK: 'true'
              AUTHELIA_SERVER_PORT: &port 80
              AUTHELIA_SESSION_REDIS_DATABASE_INDEX: 14
              AUTHELIA_SESSION_REDIS_HOST: redis.database.svc.cluster.local
              AUTHELIA_TELEMETRY_METRICS_ADDRESS: tcp://0.0.0.0:8080
              AUTHELIA_TELEMETRY_METRICS_ENABLED: 'true'
              AUTHELIA_THEME: dark
              AUTHELIA_TOTP_ISSUER: authelia.com
              AUTHELIA_WEBAUTHN_DISABLE: 'false'
              AUTHELIA_WEBAUTHN_ENABLE_PASSKEY_LOGIN: 'true'
              AUTHELIA_WEBAUTHN_EXPERIMENTAL_ENABLE_PASSKEY_UV_TWO_FACTORS: 'true'
              SECRET_DOMAIN: ${SECRET_DOMAIN}
              SECRET_PUBLIC_DOMAIN: ${SECRET_PUBLIC_DOMAIN}
            resources:
              requests:
                cpu: 5m
                memory: 10Mi
              limits:
                memory: 200Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            args: [--config, /config/configuration.yml, --config.experimental.filters, expand-env]
    service:
      app:
        controller: authelia
        ports:
          http:
            port: *port
          metrics:
            enabled: true
            port: 8080
    ingress:
      app:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_PUBLIC_DOMAIN}"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            add_header Cache-Control "no-store";
            add_header Pragma "no-cache";
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
        hosts:
          - host: &externalHost auth.${SECRET_PUBLIC_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *externalHost
      internal:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            add_header Cache-Control "no-store";
            add_header Pragma "no-cache";
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
        hosts:
          - host: &internalHost auth.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *internalHost
    persistence:
      config:
        enabled: true
        type: configMap
        name: authelia-configmap
        globalMounts:
          - path: /config/configuration.yml
            subPath: configuration.yml
            readOnly: false
    enableServiceLinks: false
    serviceMonitor:
      app:
        enabled: true
        serviceName: authelia
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
