---
session:
  redis:
    high_availability:
      sentinel_name: redis-master
      nodes:
        - host: redis-node-0.redis-headless.database.svc.cluster.local
          port: 26379
        - host: redis-node-1.redis-headless.database.svc.cluster.local
          port: 26379
        - host: redis-node-2.redis-headless.database.svc.cluster.local
          port: 26379
  same_site: lax
  cookies:
    - name: "${SECRET_DOMAIN}_session"
      domain: "${SECRET_DOMAIN}"
      authelia_url: "https://auth.${SECRET_DOMAIN}"
      default_redirection_url: "https://${SECRET_DOMAIN}"
    - name: "${SECRET_PUBLIC_DOMAIN}_session"
      domain: "${SECRET_PUBLIC_DOMAIN}"
      authelia_url: "https://auth.${SECRET_PUBLIC_DOMAIN}"
      default_redirection_url: "https://${SECRET_PUBLIC_DOMAIN}"

access_control:
  default_policy: deny
  networks:
    - name: internal
      networks: ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]
  rules:
    - domain:
        - "qb.${SECRET_DOMAIN}"
        - "radarr.${SECRET_DOMAIN}"
        - "radarr4k.${SECRET_DOMAIN}"
      policy: bypass
      resources: ["^/api([?/].*)?$"]
    - domain:
        - "paperless.${SECRET_DOMAIN}"
        - "memos.${SECRET_DOMAIN}"
      policy: two_factor
      subject:
        - 'group:users'
    - domain: ["echo-server.${SECRET_DOMAIN}"]
      policy: one_factor
      subject:
        - 'group:users'
    - domain: ["*.${SECRET_DOMAIN}"]
      policy: one_factor
      subject:
        - 'group:admin'
    - domain: ["*.${SECRET_PUBLIC_DOMAIN}"]
      policy: two_factor
      subject:
        - 'group:admin'

identity_providers:
  oidc:
    cors:
      endpoints: ["authorization", "token", "revocation", "introspection"]
      allowed_origins_from_client_redirect_uris: true
    clients:
      - id: grafana
        description: Grafana
        secret: "${GRAFANA_OAUTH_CLIENT_SECRET_HASH}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: ["openid", "profile", "groups", "email"]
        redirect_uris: ["https://grafana.${SECRET_DOMAIN}/login/generic_oauth"]
        userinfo_signed_response_alg: none
      - id: miniflux
        description: Miniflux
        secret: "${MINIFLUX_OAUTH_CLIENT_SECRET_HASH}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: ["openid", "profile", "groups", "email"]
        redirect_uris:
          - "https://miniflux.${SECRET_PUBLIC_DOMAIN}/oauth2/oidc/callback"
        userinfo_signed_response_alg: none
      - id: memos
        description: Memos
        secret: "${MEMOS_OAUTH_CLIENT_SECRET_HASH}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: ["openid", "profile", "email"]
        grant_types: ["authorization_code"]
        redirect_uris: ["https://memos.${SECRET_DOMAIN}/auth/callback"]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: "client_secret_post"
      - client_id: mealie
        client_name: Mealie
        public: true
        authorization_policy: two_factor
        redirect_uris: ['https://recipes.${SECRET_PUBLIC_DOMAIN}/login']
        scopes: [openid, email, profile, groups]
        userinfo_signed_response_alg: 'none'
        token_endpoint_auth_method: 'none'
