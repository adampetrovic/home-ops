---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: bazarr
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      bazarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/bazarr
              tag: 1.5.2@sha256:dbc87e5ce9e199709188e152e82b3ff5d33e6521a1b3d61e465aa75b4b739e7f
            env:
              TZ: "Australia/Sydney"
            envFrom:
              - secretRef:
                  name: bazarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 6767
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
          subcleaner:
            image:
              repository: registry.k8s.io/git-sync/git-sync
              tag: v4.4.3@sha256:ee0dda4203f56848f09b41650447353edf69ab0e4319254cd854adab3074dd2e
            env:
              GITSYNC_REPO: https://github.com/KBlixt/subcleaner
              GITSYNC_REF: master
              GITSYNC_PERIOD: 24h
              GITSYNC_ROOT: /add-ons
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext: *securityContext
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: bazarr
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        hosts:
          - host: &host bazarr.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      add-ons:
        type: emptyDir
      cache:
        type: emptyDir
        globalMounts:
          - path: /config/cache
      config:
        existingClaim: bazarr
      log:
        type: emptyDir
        globalMounts:
          - path: /config/log
      movies:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/movies
        globalMounts:
          - path: /movies
            readOnly: false
      movies-4k:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/movies-4k
        globalMounts:
          - path: /movies-4k
            readOnly: false
      tv:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/tv
        globalMounts:
          - path: /tv
            readOnly: false
      tv-4k:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/tv-4k
        globalMounts:
          - path: /tv-4k
            readOnly: false
      scripts:
        type: configMap
        name: bazarr-scripts
        defaultMode: 0775
        globalMounts:
          - readOnly: true
      tmp:
        type: emptyDir
