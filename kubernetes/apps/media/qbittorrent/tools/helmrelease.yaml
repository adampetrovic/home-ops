# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: qbtools
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  uninstall:
    keepHistory: false
  dependsOn:
    - name: qbittorrent
      namespace: media
  values:
    controllers:
      tagging:
        type: cronjob
        cronjob: &cronJobSpec
          schedule: "@hourly"
          timeZone: ${TIMEZONE}
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
        initContainers:
          tagging:
            image: &image
              repository: ghcr.io/buroa/qbtools
              tag: v0.19.16@sha256:2b90924170f62083cf01646e41bda92319ad641e7627add59e15b2b21c6f8cd1
            env: &env
              TZ: ${TIMEZONE}
              QBITTORRENT_HOST: qbittorrent.media.svc.cluster.local
              QBITTORRENT_PORT: 80
              SABNZBD_HOST: sabnzbd.media.svc.cluster.local
              SABNZBD_PORT: 80
            args: [
              "tagging",
              "--added-on",
              "--expired",
              "--last-activity",
              "--sites",
              "--unregistered",
              "--server", "qbittorrent.media.svc.cluster.local",
              "--port", "80",
              "--config", "/config/config.yaml"
            ]
            resources: &resources
              requests:
                cpu: 25m
              limits:
                memory: 256M
        containers:
          unregistered:
            image: *image
            env: *env
            args: [
              "prune",
              "--exclude-category", "manual",
              "--include-tag", "unregistered",
            ]
            resources: *resources
          expired:
            image: *image
            env: *env
            args: [
              "prune",
              "--exclude-category", "manual",
              "--include-tag", "expired",
              "--include-tag", "added:30d",
            ]
            resources: *resources
        pod:
          restartPolicy: OnFailure
          securityContext: &securityContext
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [100]
      orphaned:
        type: cronjob
        cronjob:
          <<: *cronJobSpec
          schedule: "@daily"
        containers:
          orphaned:
            image: *image
            env: *env
            args: [
              "orphaned",
              "--exclude-pattern", "*_unpackerred*",
              "--exclude-pattern", "*/manual/*",
              "--dry-run"
            ]
            resources: *resources
        pod:
          restartPolicy: OnFailure
          securityContext: *securityContext
      reannounce:
        containers:
          reannounce:
            image: *image
            env: *env
            args: [
              "reannounce",
              "--process-seeding",
            ]
            resources: *resources
        pod:
          securityContext: *securityContext
    persistence:
      config-file:
        type: configMap
        name: qbtools-configmap
        advancedMounts:
          tagging:
            tagging:
              - path: /config/config.yaml
                subPath: config.yaml
                readOnly: true
      downloads:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/downloads
        globalMounts:
          - path: /downloads/complete/qbt
