apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: qbittorrent
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [100]
      nodeSelector:
        node-role.kubernetes.io/worker: 'true'
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/qbittorrent
              tag: 4.6.3
            env:
              TZ: ${TIMEZONE}
              QBITTORRENT__PORT: &port 80
              QBITTORRENT__BT_PORT: &port-bt 50413
              QBT_Preferences__WebUI__ServerDomains: '*'
            resources:
              requests:
                cpu: 505m
                memory: 2014Mi
              limits:
                memory: 8Gi
    service:
      main:
        ports:
          http:
            port: *port
      bittorrent:
        enabled: true
        controller: main
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        annotations:
          io.cilium/lb-ipam-ips: 10.0.81.7
        ports:
          bittorrent:
            enabled: true
            port: *port-bt
            protocol: TCP
            targetPort: *port-bt
    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        hosts:
          - host: &host qb.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent
      downloads:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/downloads
        globalMounts:
          - path: /downloads
