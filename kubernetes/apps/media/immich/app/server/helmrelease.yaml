---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app immich-server
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: redis
      namespace: database
  values:
    controllers:
      main:
        strategy: RollingUpdate
        annotations:
          secret.reloader.stakater.com/reload: immich-secret
          configmap.reloader.stakater.com/reload: immich-configmap
        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [44, 100]
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.2
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: immich-secret
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.101.0
            command: /bin/sh
            args:
              - ./start-server.sh
            envFrom:
              - secretRef:
                  name: immich-secret
              - configMapRef:
                  name: immich-configmap
    service:
      main:
        controller: main
        ports:
          http:
            port: 3001
    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: photos.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
    persistence:
      library:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/k8s/immich
        globalMounts:
          - path: /usr/src/app/upload
      media:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/photos/shared
        globalMounts:
          - path: /usr/src/app/external
      geocoding-dump:
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/.reverse-geocoding-dump
      transformers-cache:
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/.transformers_cache
