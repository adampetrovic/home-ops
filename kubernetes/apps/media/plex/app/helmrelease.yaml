# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
spec:
  interval: 15m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  uninstall:
    keepHistory: false
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.42.1.10060@sha256:04563be281364ba2462285aacb2ca13d7ef7e1d0b19e1203f4c19b4a56840c5c
            env:
              TZ: ${TZ}
              PLEX_ADVERTISE_URL: https://plex.${SECRET_DOMAIN}:443,http://plex-direct.${SECRET_DOMAIN}:32400,http://10.0.81.3:32400
              PLEX_NO_AUTH_NETWORKS: 10.0.0.0/16,10.69.0.0/16
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
                memory: 16Gi
          vector:
            image:
              repository: timberio/vector
              tag: 0.50.0-alpine
            args:
              - --config-yaml
              - /etc/vector/vector.yaml
            resources:
              requests:
                cpu: 50m
                memory: 128Mi
              limits:
                cpu: 200m
                memory: 256Mi
        pod:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: intel.feature.node.kubernetes.io/gpu
                        operator: In
                        values: ["true"]
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  preference:
                    matchExpressions:
                      - key: drivers.talos.dev/nic
                        operator: In
                        values: ["i40e"]
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values: ["frigate"]
                  topologyKey: kubernetes.io/hostname
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            runAsNonRoot: true
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [44, 100]

    service:
      app:
        type: LoadBalancer
        controller: plex
        annotations:
          external-dns.alpha.kubernetes.io/hostname: plex-direct.${SECRET_DOMAIN}
          io.cilium/lb-ipam-ips: 10.0.81.3
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: 32400
    ingress:
      app:
        enabled: true
        className: internal
        hosts:
          - host: &host "plex.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: plex
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server
      vector-data:
        type: emptyDir
        advancedMounts:
          plex:
            vector:
              - path: /vector-data-dir
      vector-config:
        type: configMap
        name: plex-vector-config
        advancedMounts:
          plex:
            vector:
              - path: /etc/vector/vector.yaml
                subPath: vector.yaml
                readOnly: true

      # Separate PVC for cache to avoid backing up cache files
      plex-cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      movies:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/movies
        globalMounts:
          - path: /movies
            readOnly: false
      movies-4k:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/movies-4k
        globalMounts:
          - path: /movies-4k
            readOnly: false
      movies-kids:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/kids/movies
        globalMounts:
          - path: /movies-kids
            readOnly: false
      tv:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/tv
        globalMounts:
          - path: /tv
            readOnly: false
      tv-4k:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/tv-4k
        globalMounts:
          - path: /tv-4k
            readOnly: false
      tv-kids:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/kids/tv
        globalMounts:
          - path: /tv-kids
            readOnly: false
      music:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/music
        globalMounts:
          - path: /music
            readOnly: false
