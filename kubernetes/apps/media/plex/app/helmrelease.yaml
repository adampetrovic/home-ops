---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.40.2.8395-c67dce28e@sha256:44a520cfc646ea1afdcb3ab24917a77aff617eed6946eaaf1e265cf214656971
            env:
              TZ: ${TZ}
              PLEX_ADVERTISE_URL: https://plex.${SECRET_DOMAIN}:443,http://plex-direct.${SECRET_DOMAIN}:32400,http://10.0.81.3:32400
              PLEX_NO_AUTH_NETWORKS: 10.0.0.0/16,${CLUSTER_CIDR}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
                memory: 16Gi
        pod:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values: ["frigate"]
                  topologyKey: kubernetes.io/hostname
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            runAsNonRoot: true
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [44, 100]

    service:
      main:
        type: LoadBalancer
        annotations:
          external-dns.alpha.kubernetes.io/hostname: plex-direct.${SECRET_DOMAIN}
          io.cilium/lb-ipam-ips: 10.0.81.3
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: &host "plex.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: plex
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server

      # Separate PVC for cache to avoid backing up cache files
      plex-cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      movies:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/movies
        globalMounts:
          - path: /movies
            readOnly: true
      movies-4k:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/movies-4k
        globalMounts:
          - path: /movies-4k
            readOnly: true
      tv:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/tv
        globalMounts:
          - path: /tv
            readOnly: true
      tv-4k:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/tv-4k
        globalMounts:
          - path: /tv-4k
            readOnly: true
      music:
        type: nfs
        server: ${SECRET_NFS_DOMAIN}
        path: /volume2/music
        globalMounts:
          - path: /music
            readOnly: true
